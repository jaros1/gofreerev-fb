<%= hidden_field_tag :newest_gift_id, @newest_gift_id, :id => "newest-gift-id" %>
<%= hidden_field_tag :newest_status_update_at, @newest_status_update_at, :id => "newest-status-update-at" %>

<script>
  last_user_ajax_comment_at = null ;
<%=
  # recheck invalid picture urls with owner permissions
  @missing_api_picture_urls
%>
</script>

<% #noinspection RubyResolve
   if !@user -%>
    <p>
      <%= my_t '.not_logged_in_text' %>
    </p>
<% else -%>
    <% if !@user.post_gift_allowed? -%>
        <p title="<%= my_t '.post_gift_not_allowed_title', :appname => APP_NAME, :apiname => @user.api_name_without_brackets %>">
          <%= my_t '.post_gift_not_allowed_text', :appname => APP_NAME, :apiname => @user.api_name_without_brackets %><br />
          <%= link_to my_t('.request_post_gift_priv_link_text', :appname => APP_NAME), "javascript: {top.location.href='#{auth_post_gift_url}'}" %>
        </p>
    <% elsif flash[:read_stream] -%>
        <p title="<%= my_t '.read_stream_not_allowed_title', :appname => APP_NAME, :apiname => @user.api_name_without_brackets %>">
          <%= my_t '.read_stream_not_allowed_text', :appname => APP_NAME, :apiname => @user.api_name_without_brackets %><br />
          <%= link_to my_t('.request_read_stream_priv_link_text', :appname => APP_NAME), "javascript: {top.location.href='#{auth_read_stream_url}'}" %>
        </p>
    <% end -%>
    <%= form_for @gift, :multipart => true, :html => { :enctype => 'multipart/form-data' } do |f| -%>
        <table>
          <tr>
            <td colspan="3"><%= my_t '.create_gift_header_line' %></td>
          </tr>
          <tr title="<%= my_t '.price_title' %>">
            <td><%= my_t '.price_prompt' %></td>
            <td colspan="2">
              <%= f.text_field(:price, :size=>10, :maxlength=>10) %>
              <%= my_t '.price_free' %>
              <%= @user.currency %>
              &nbsp;&nbsp;&nbsp;
              <%= my_t '.direction_giver_prompt' %> <%= f.radio_button :direction, 'giver' %>
              <%= my_t '.direction_receiver_prompt' %> <%= f.radio_button :direction, 'receiver' %>
            </td>
          </tr>
          <tr title="<%= my_t '.description_title' %>">
            <td style="vertical-align: top"><%= my_t '.description_prompt' %></td>
            <td><%= f.text_area :description, :size => '60x2', :placeholder => 'Enter Comments', :onfocus => 'autoresize_text_field(this)' %></td>
            <td><%= f.submit my_t('.gift_submit_button_text'), :onclick => '{return csv_gift()}' %></td>
          </tr>
          <tr title="<%= my_t ".file_title_#{@user.post_gift_allowed?}", :appname => APP_NAME, :apiname => @user.api_name_without_brackets %>">
            <td><%= my_t '.file_prompt' %></td>
            <td colspan="2"><%= file_field_tag(:gift_file, :disabled => !@user.post_gift_allowed?) %></td>
          </tr>
        </table>
    <% end # form -%>

    <% if @gifts.size == 0 -%>
        <p>
          <%= my_t '.no_gifts_was_found_html', :appname => APP_NAME, :apiname => @user.api_name_without_brackets %>
        </p>
        <%= my_t 'shared.invite_friends.invite_api_friends_link_prompt1', :apiname => @user.api_name_without_brackets %> <%= invite_friends_link1 %>
    <% else -%>
        <br />
        <table id="gifts" style="border-spacing: 0;">
          <%= render :partial => 'table_header_row' %>
          <%= render :partial => 'gifts' %>
        </table>
    <% end -%>

<% end -%>



<br />
<br />
<%= link_to "add-more-lines", "/gifts?last_gift_id=#{@last_gift_id}", :remote => true, :id => "show-more-gifts-link", :style => "display: none" %>

<script>
    // add page specific version of pre_update_currency function.
    // That is confirm popup before leaving page with unsaved data.
    pending_gift_msg = '<%= my_t '.pending_gift_popup_msg' %>' ;
    pre_update_currency = gifts_pre_update_currency ;

    // Translate texts used in client side validations.
    csv_gift_description_required = '<%= my_t '.description_required_text' %>' ;
    csv_gift_price_invalid = '<%= my_t '.price_invalid_text' %>' ;
    csv_comment_comment_required = '<%= my_t '.comment_comment_required_text' %>' ;
    csv_comment_price_invalid = '<%= my_t '.comment_price_invalid_text' %>' ;


    // report any invalid api picture urls - url has changed or picture has been deleted
    // array with gift ids is initialized in img onload="check_api_picture_url ..."
    // submitted in 2 seconds to allow pictures in page to load
    // api_picture_url_on_error_at is setted for pictures with invalid urls
    setTimeout(report_missing_api_picture_urls, 2000) ;

    // true when user is near end of page (get more gifts)
    var bottom = false ;

    // add post ajax event handler for "show-more-gifts-link" link
    // change url with new last_gift_id or hide url when all gifts has been returned to page
    $(document).ready(function(){
        $('#show-more-gifts-link')
                .bind("ajax:success", function(evt, data, status, xhr){
                    // find id for last gift (nil or gift_id for last gift in table)
                    var link = document.getElementById("show-more-gifts-link") ;
                    if (!link) return ; // link has already been removed
                    var table = document.getElementById("gifts") ;
                    var trs = table.getElementsByTagName('tr') ;
                    var tr = trs[trs.length-1] ;
                    var tr_id = tr.id ;
                    // alert('tr_id = ' + tr_id) ;
                    if (tr_id == "") {
                      // alert('no more gifts - remove link') ;
                      link.parentNode.removeChild(link);
                      // todo: remove this event handler
                    }
                    else {
                      // change last_gift_id in link
                      var tr_id_a = tr_id.split("_") ;
                      var last_gift_id = tr_id_a[tr_id_a.length-1] ;
                      // alert('last_gift_id = ' + last_gift_id) ;
                      link.href = "/gifts?last_gift_id=" + last_gift_id ;
                      bottom = false ;
                    }
                });
    }); // $(document).ready

    // check if user scrolls to end of page and get more gifts from server before user reaches end of page
    $(window).scroll(function(){
        if (bottom) return ;
        if (($(document).height() - $(window).height()) - $(window).scrollTop() < 600){
            bottom = true ;
            // alert("We're at the bottom of the page!!");
            var link = document.getElementById("show-more-gifts-link") ;
            if (!link) return ; // no more gifts - unregister this function
            // get more gifts from server
            link.click() ;
            // report any invalid api picture urls - url has changed or picture has been deleted
            // array with gift ids is initialized in img onload="check_api_picture_url ..."
            // submitted in 2 seconds to allow pictures in page to load
            // api_picture_url_on_error_at is set for pictures with invalid urls
            // picture urls are checked with api calls by current user and if necessary by picture owner at a later time
            setTimeout(report_missing_api_picture_urls, 2000) ;
        }
    }); // $(window).scroll

    // scroll to top of page after reload - only fetch newest 10 gifts after reload
    $(document).ready(function(){
        $(this).scrollTop(0);
    });

</script>

